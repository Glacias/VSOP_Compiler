
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocif_thenlet_precnonassocelsewhile_preclet_prec_assignrightassignleftandorxorrightnotnonassoclowerlargerlower_equallarger_equalequalleftplusminuslefttimesdivmodulononassocplusplusminusminusrightuminusisnullrightpowleftdotand assign bool class colon comma div do dot double_colon else equal extends false if in int32 integer_literal isnull larger larger_equal lbrace let lower lower_equal lpar minus minusminus modulo new not object_identifier or plus plusplus pow rbrace rpar semicolon string string_literal then times true type_identifier unit while xorProgram : Class\n                   | Program ClassClass_body :\n                      | Class_body Field\n                      | Class_body MethodClass : class type_identifier lbrace Class_body rbrace\n                 | class type_identifier extends type_identifier lbrace Class_body rbraceClass : class type_identifier lbrace error rbrace\n                 | class type_identifier extends type_identifier lbrace error rbraceClass : class lbrace Class_body rbrace\n                 | class extends type_identifier lbrace Class_body rbraceClass : class object_identifier lbrace error rbrace\n                 | class object_identifier extends type_identifier lbrace Class_body rbraceClass : class type_identifier extends object_identifier lbrace Class_body rbraceField : object_identifier colon Type semicolon\n                 | object_identifier colon Type assign Expr semicolonField : object_identifier colon Type\n                 | object_identifier colon Type assign ExprField : object_identifier semicolon\n                 | object_identifier assign Expr semicolonMethod : object_identifier lpar Formals rpar colon Type BlockMethod : object_identifier lpar error rpar colon Type BlockType : type_identifier\n                | int32\n                | bool\n                | string\n                | unitFormals :\n                   | Formal\n                   | Formals comma FormalFormals : Formals FormalFormal : object_identifier colon TypeFormal : object_identifierBlock : lbrace Block_body rbraceBlock : lbrace error rbraceBlock : lbrace rbraceBlock : lbrace Block_body semicolon rbraceBlock_body : Expr\n                      | Block_body semicolon ExprBlock_body : Block_body ExprExpr : if Expr then Expr %prec if_then\n                | if Expr then Expr else ExprExpr : while Expr do Expr %prec while_precExpr : let object_identifier colon Type in Expr %prec let_prec\n                | let object_identifier colon Type assign Expr in Expr %prec let_prec_assignExpr : let object_identifier in Expr\n                | let object_identifier assign Expr in Expr Expr : object_identifier assign ExprExpr : minus Expr %prec uminusExpr : not Expr\n                | isnull Expr\n                | plusplus Expr\n                | minusminus ExprExpr : Expr plusplus\n                | Expr minusminusExpr : Expr and Expr\n                | Expr or Expr\n                | Expr xor Expr\n                | Expr equal Expr\n                | Expr lower Expr\n                | Expr larger Expr\n                | Expr lower_equal Expr\n                | Expr larger_equal Expr\n                | Expr plus Expr\n                | Expr minus Expr\n                | Expr times Expr\n                | Expr div Expr\n                | Expr modulo Expr\n                | Expr pow ExprExpr : object_identifier lpar Args rpar\n                | Expr dot object_identifier lpar Args rpar\n                | Expr double_colon type_identifier dot object_identifier lpar Args rparExpr : new type_identifierExpr : new object_identifierExpr : object_identifierExpr : LiteralExpr : lpar rparExpr : lpar Expr rparExpr : lpar error rparExpr : BlockArgs :\n                | Expr\n                | Args comma ExprLiteral : integer_literal\n                   | string_literal\n                   | Boolean_literalBoolean_literal : true\n                           | false'
    
_lr_action_items = {'class':([0,1,2,4,19,26,27,35,70,72,73,74,120,],[3,3,-1,-2,-10,-6,-8,-12,-11,-7,-9,-14,-13,]),'$end':([1,2,4,19,26,27,35,70,72,73,74,120,],[0,-1,-2,-10,-6,-8,-12,-11,-7,-9,-14,-13,]),'type_identifier':([3,7,10,14,30,57,97,115,143,153,155,],[5,12,17,25,41,109,140,41,41,41,41,]),'lbrace':([3,5,8,12,17,18,25,32,41,42,43,44,45,46,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,109,110,111,112,114,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,166,167,168,169,173,174,175,176,179,180,181,182,184,186,187,188,],[6,9,13,23,28,29,36,63,-23,-24,-25,-26,-27,-75,63,63,63,63,63,63,63,63,-76,-80,-84,-85,-86,63,-87,-88,63,63,63,-54,-55,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-49,-50,-51,-52,-53,-77,-73,-74,63,-36,-38,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,63,63,63,63,-78,-79,-34,63,-40,-35,-70,63,63,-41,-43,-46,-37,-39,63,63,63,63,63,63,-71,63,-42,-44,-47,63,-72,-45,]),'extends':([3,5,8,],[7,10,14,]),'object_identifier':([3,6,9,10,11,15,20,21,23,28,29,31,32,33,34,36,37,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,101,102,103,104,105,106,109,110,111,112,114,117,118,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,152,154,156,157,158,159,160,161,162,164,166,167,173,174,175,176,177,178,179,180,181,182,184,186,187,188,],[8,-3,-3,18,22,22,-4,-5,-3,-3,-3,-19,46,66,22,-3,22,22,-17,-23,-24,-25,-26,-27,-75,46,46,100,46,46,46,46,46,46,110,-76,-80,-84,-85,-86,46,-87,-88,-33,66,-29,22,-15,46,46,46,-20,-54,-55,46,46,46,46,46,46,46,46,46,46,46,46,46,46,139,-49,-50,-51,-52,-53,-77,-73,-74,46,-36,-38,66,-31,-18,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,46,46,46,46,-78,-79,-34,46,-40,-35,-32,-30,-16,-70,46,46,172,-41,-43,-46,-37,-39,46,46,46,46,-21,-22,-71,46,-42,-44,-47,46,-72,-45,]),'rbrace':([6,9,11,15,16,20,21,23,24,28,29,31,34,36,37,38,39,40,41,42,43,44,45,46,58,59,60,61,62,63,64,65,71,75,79,80,81,101,102,103,104,105,106,109,110,111,112,113,114,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,156,157,161,162,164,166,167,177,178,179,181,182,184,187,188,],[-3,-3,19,26,27,-4,-5,-3,35,-3,-3,-19,70,-3,72,73,74,-17,-23,-24,-25,-26,-27,-75,-76,-80,-84,-85,-86,112,-87,-88,120,-15,-20,-54,-55,-49,-50,-51,-52,-53,-77,-73,-74,148,-36,151,-38,-18,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-78,-79,-34,166,-40,-35,-16,-70,-41,-43,-46,-37,-39,-21,-22,-71,-42,-44,-47,-72,-45,]),'error':([9,13,28,33,56,63,],[16,24,38,68,108,113,]),'colon':([22,66,100,116,119,],[30,115,143,153,155,]),'semicolon':([22,40,41,42,43,44,45,46,47,58,59,60,61,62,64,65,80,81,101,102,103,104,105,106,109,110,111,112,114,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,166,167,179,181,182,184,187,188,],[31,75,-23,-24,-25,-26,-27,-75,79,-76,-80,-84,-85,-86,-87,-88,-54,-55,-49,-50,-51,-52,-53,-77,-73,-74,149,-36,-38,156,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-78,-79,-34,-40,-35,-70,-41,-43,-46,-37,-39,-71,-42,-44,-47,-72,-45,]),'assign':([22,40,41,42,43,44,45,46,100,163,],[32,76,-23,-24,-25,-26,-27,77,145,175,]),'lpar':([22,32,46,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,109,110,111,112,114,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,166,167,172,173,174,175,176,179,180,181,182,184,186,187,188,],[33,56,78,56,56,56,56,56,56,56,56,-76,-80,-84,-85,-86,56,-87,-88,56,56,56,-54,-55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-49,-50,-51,-52,-53,-77,-73,-74,56,-36,-38,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,159,56,56,56,56,-78,-79,-34,56,-40,-35,-70,56,56,-41,-43,-46,-37,-39,180,56,56,56,56,-71,56,-42,-44,-47,56,-72,-45,]),'int32':([30,115,143,153,155,],[42,42,42,42,42,]),'bool':([30,115,143,153,155,],[43,43,43,43,43,]),'string':([30,115,143,153,155,],[44,44,44,44,44,]),'unit':([30,115,143,153,155,],[45,45,45,45,45,]),'if':([32,46,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,109,110,111,112,114,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,166,167,173,174,175,176,179,180,181,182,184,186,187,188,],[48,-75,48,48,48,48,48,48,48,48,-76,-80,-84,-85,-86,48,-87,-88,48,48,48,-54,-55,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-49,-50,-51,-52,-53,-77,-73,-74,48,-36,-38,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,48,48,48,48,-78,-79,-34,48,-40,-35,-70,48,48,-41,-43,-46,-37,-39,48,48,48,48,-71,48,-42,-44,-47,48,-72,-45,]),'while':([32,46,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,109,110,111,112,114,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,166,167,173,174,175,176,179,180,181,182,184,186,187,188,],[49,-75,49,49,49,49,49,49,49,49,-76,-80,-84,-85,-86,49,-87,-88,49,49,49,-54,-55,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-49,-50,-51,-52,-53,-77,-73,-74,49,-36,-38,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,49,49,49,49,-78,-79,-34,49,-40,-35,-70,49,49,-41,-43,-46,-37,-39,49,49,49,49,-71,49,-42,-44,-47,49,-72,-45,]),'let':([32,46,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,109,110,111,112,114,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,166,167,173,174,175,176,179,180,181,182,184,186,187,188,],[50,-75,50,50,50,50,50,50,50,50,-76,-80,-84,-85,-86,50,-87,-88,50,50,50,-54,-55,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-49,-50,-51,-52,-53,-77,-73,-74,50,-36,-38,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,50,50,50,50,-78,-79,-34,50,-40,-35,-70,50,50,-41,-43,-46,-37,-39,50,50,50,50,-71,50,-42,-44,-47,50,-72,-45,]),'minus':([32,46,47,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,101,102,103,104,105,106,107,109,110,111,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,165,166,167,170,173,174,175,176,179,180,181,182,183,184,186,187,188,],[51,-75,91,51,51,51,51,51,51,51,51,-76,-80,-84,-85,-86,51,-87,-88,51,51,51,-54,-55,51,51,51,51,51,51,51,51,51,51,51,51,51,51,91,91,-49,91,-51,-52,-53,-77,91,-73,-74,51,-36,91,91,91,91,91,91,91,91,91,91,91,91,-64,-65,-66,-67,-68,-69,51,51,51,51,-78,-79,-34,51,91,-35,-70,51,51,91,91,91,91,-37,91,91,51,51,51,51,-71,51,91,91,91,91,51,-72,91,]),'not':([32,46,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,109,110,111,112,114,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,166,167,173,174,175,176,179,180,181,182,184,186,187,188,],[52,-75,52,52,52,52,52,52,52,52,-76,-80,-84,-85,-86,52,-87,-88,52,52,52,-54,-55,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-49,-50,-51,-52,-53,-77,-73,-74,52,-36,-38,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,52,52,52,52,-78,-79,-34,52,-40,-35,-70,52,52,-41,-43,-46,-37,-39,52,52,52,52,-71,52,-42,-44,-47,52,-72,-45,]),'isnull':([32,46,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,109,110,111,112,114,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,166,167,173,174,175,176,179,180,181,182,184,186,187,188,],[53,-75,53,53,53,53,53,53,53,53,-76,-80,-84,-85,-86,53,-87,-88,53,53,53,-54,-55,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-49,-50,-51,-52,-53,-77,-73,-74,53,-36,-38,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,53,53,53,53,-78,-79,-34,53,-40,-35,-70,53,53,-41,-43,-46,-37,-39,53,53,53,53,-71,53,-42,-44,-47,53,-72,-45,]),'plusplus':([32,46,47,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,101,102,103,104,105,106,107,109,110,111,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,165,166,167,170,173,174,175,176,179,180,181,182,183,184,186,187,188,],[54,-75,80,54,54,54,54,54,54,54,54,-76,-80,-84,-85,-86,54,-87,-88,54,54,54,-54,-55,54,54,54,54,54,54,54,54,54,54,54,54,54,54,80,80,-49,80,-51,None,None,-77,80,-73,-74,54,-36,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-69,54,54,54,54,-78,-79,-34,54,80,-35,-70,54,54,80,80,80,80,-37,80,80,54,54,54,54,-71,54,80,80,80,80,54,-72,80,]),'minusminus':([32,46,47,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,101,102,103,104,105,106,107,109,110,111,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,165,166,167,170,173,174,175,176,179,180,181,182,183,184,186,187,188,],[55,-75,81,55,55,55,55,55,55,55,55,-76,-80,-84,-85,-86,55,-87,-88,55,55,55,-54,-55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,81,81,-49,81,-51,None,None,-77,81,-73,-74,55,-36,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-69,55,55,55,55,-78,-79,-34,55,81,-35,-70,55,55,81,81,81,81,-37,81,81,55,55,55,55,-71,55,81,81,81,81,55,-72,81,]),'new':([32,46,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,109,110,111,112,114,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,166,167,173,174,175,176,179,180,181,182,184,186,187,188,],[57,-75,57,57,57,57,57,57,57,57,-76,-80,-84,-85,-86,57,-87,-88,57,57,57,-54,-55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-49,-50,-51,-52,-53,-77,-73,-74,57,-36,-38,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,57,57,57,57,-78,-79,-34,57,-40,-35,-70,57,57,-41,-43,-46,-37,-39,57,57,57,57,-71,57,-42,-44,-47,57,-72,-45,]),'integer_literal':([32,46,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,109,110,111,112,114,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,166,167,173,174,175,176,179,180,181,182,184,186,187,188,],[60,-75,60,60,60,60,60,60,60,60,-76,-80,-84,-85,-86,60,-87,-88,60,60,60,-54,-55,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-49,-50,-51,-52,-53,-77,-73,-74,60,-36,-38,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,60,60,60,60,-78,-79,-34,60,-40,-35,-70,60,60,-41,-43,-46,-37,-39,60,60,60,60,-71,60,-42,-44,-47,60,-72,-45,]),'string_literal':([32,46,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,109,110,111,112,114,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,166,167,173,174,175,176,179,180,181,182,184,186,187,188,],[61,-75,61,61,61,61,61,61,61,61,-76,-80,-84,-85,-86,61,-87,-88,61,61,61,-54,-55,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-49,-50,-51,-52,-53,-77,-73,-74,61,-36,-38,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,61,61,61,61,-78,-79,-34,61,-40,-35,-70,61,61,-41,-43,-46,-37,-39,61,61,61,61,-71,61,-42,-44,-47,61,-72,-45,]),'true':([32,46,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,109,110,111,112,114,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,166,167,173,174,175,176,179,180,181,182,184,186,187,188,],[64,-75,64,64,64,64,64,64,64,64,-76,-80,-84,-85,-86,64,-87,-88,64,64,64,-54,-55,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-49,-50,-51,-52,-53,-77,-73,-74,64,-36,-38,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,64,64,64,64,-78,-79,-34,64,-40,-35,-70,64,64,-41,-43,-46,-37,-39,64,64,64,64,-71,64,-42,-44,-47,64,-72,-45,]),'false':([32,46,48,49,51,52,53,54,55,56,58,59,60,61,62,63,64,65,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,101,102,103,104,105,106,109,110,111,112,114,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,151,157,158,159,161,162,164,166,167,173,174,175,176,179,180,181,182,184,186,187,188,],[65,-75,65,65,65,65,65,65,65,65,-76,-80,-84,-85,-86,65,-87,-88,65,65,65,-54,-55,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-49,-50,-51,-52,-53,-77,-73,-74,65,-36,-38,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,65,65,65,65,-78,-79,-34,65,-40,-35,-70,65,65,-41,-43,-46,-37,-39,65,65,65,65,-71,65,-42,-44,-47,65,-72,-45,]),'rpar':([33,41,42,43,44,45,46,56,58,59,60,61,62,64,65,66,67,68,69,78,80,81,101,102,103,104,105,106,107,108,109,110,112,118,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,151,152,154,157,159,161,162,164,166,170,171,179,180,181,182,184,185,187,188,],[-28,-23,-24,-25,-26,-27,-75,106,-76,-80,-84,-85,-86,-87,-88,-33,116,119,-29,-81,-54,-55,-49,-50,-51,-52,-53,-77,146,147,-73,-74,-36,-31,-48,157,-82,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-78,-79,-34,-35,-32,-30,-70,-81,-41,-43,-46,-37,-83,179,-71,-81,-42,-44,-47,187,-72,-45,]),'comma':([33,41,42,43,44,45,46,58,59,60,61,62,64,65,66,67,69,78,80,81,101,102,103,104,105,106,109,110,112,118,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,151,152,154,157,159,161,162,164,166,170,171,179,180,181,182,184,185,187,188,],[-28,-23,-24,-25,-26,-27,-75,-76,-80,-84,-85,-86,-87,-88,-33,117,-29,-81,-54,-55,-49,-50,-51,-52,-53,-77,-73,-74,-36,-31,-48,158,-82,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-78,-79,-34,-35,-32,-30,-70,-81,-41,-43,-46,-37,-83,158,-71,-81,-42,-44,-47,158,-72,-45,]),'in':([41,42,43,44,45,46,58,59,60,61,62,64,65,80,81,100,101,102,103,104,105,106,109,110,112,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,151,157,161,162,163,164,165,166,179,181,182,183,184,187,188,],[-23,-24,-25,-26,-27,-75,-76,-80,-84,-85,-86,-87,-88,-54,-55,144,-49,-50,-51,-52,-53,-77,-73,-74,-36,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-78,-79,-34,-35,-70,-41,-43,174,-46,176,-37,-71,-42,-44,186,-47,-72,-45,]),'and':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,82,-76,-80,-84,-85,-86,-87,-88,-54,-55,82,82,-49,-50,-51,-52,-53,-77,82,-73,-74,-36,82,82,82,82,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-78,-79,-34,82,-35,-70,82,82,82,82,-37,82,82,-71,82,82,82,82,-72,82,]),'or':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,83,-76,-80,-84,-85,-86,-87,-88,-54,-55,83,83,-49,-50,-51,-52,-53,-77,83,-73,-74,-36,83,83,83,83,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-78,-79,-34,83,-35,-70,83,83,83,83,-37,83,83,-71,83,83,83,83,-72,83,]),'xor':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,84,-76,-80,-84,-85,-86,-87,-88,-54,-55,84,84,-49,-50,-51,-52,-53,-77,84,-73,-74,-36,84,84,84,84,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-78,-79,-34,84,-35,-70,84,84,84,84,-37,84,84,-71,84,84,84,84,-72,84,]),'equal':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,85,-76,-80,-84,-85,-86,-87,-88,-54,-55,85,85,-49,85,-51,-52,-53,-77,85,-73,-74,-36,85,85,85,85,85,85,85,None,None,None,None,None,-64,-65,-66,-67,-68,-69,-78,-79,-34,85,-35,-70,85,85,85,85,-37,85,85,-71,85,85,85,85,-72,85,]),'lower':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,86,-76,-80,-84,-85,-86,-87,-88,-54,-55,86,86,-49,86,-51,-52,-53,-77,86,-73,-74,-36,86,86,86,86,86,86,86,None,None,None,None,None,-64,-65,-66,-67,-68,-69,-78,-79,-34,86,-35,-70,86,86,86,86,-37,86,86,-71,86,86,86,86,-72,86,]),'larger':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,87,-76,-80,-84,-85,-86,-87,-88,-54,-55,87,87,-49,87,-51,-52,-53,-77,87,-73,-74,-36,87,87,87,87,87,87,87,None,None,None,None,None,-64,-65,-66,-67,-68,-69,-78,-79,-34,87,-35,-70,87,87,87,87,-37,87,87,-71,87,87,87,87,-72,87,]),'lower_equal':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,88,-76,-80,-84,-85,-86,-87,-88,-54,-55,88,88,-49,88,-51,-52,-53,-77,88,-73,-74,-36,88,88,88,88,88,88,88,None,None,None,None,None,-64,-65,-66,-67,-68,-69,-78,-79,-34,88,-35,-70,88,88,88,88,-37,88,88,-71,88,88,88,88,-72,88,]),'larger_equal':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,89,-76,-80,-84,-85,-86,-87,-88,-54,-55,89,89,-49,89,-51,-52,-53,-77,89,-73,-74,-36,89,89,89,89,89,89,89,None,None,None,None,None,-64,-65,-66,-67,-68,-69,-78,-79,-34,89,-35,-70,89,89,89,89,-37,89,89,-71,89,89,89,89,-72,89,]),'plus':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,90,-76,-80,-84,-85,-86,-87,-88,-54,-55,90,90,-49,90,-51,-52,-53,-77,90,-73,-74,-36,90,90,90,90,90,90,90,90,90,90,90,90,-64,-65,-66,-67,-68,-69,-78,-79,-34,90,-35,-70,90,90,90,90,-37,90,90,-71,90,90,90,90,-72,90,]),'times':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,92,-76,-80,-84,-85,-86,-87,-88,-54,-55,92,92,-49,92,-51,-52,-53,-77,92,-73,-74,-36,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-66,-67,-68,-69,-78,-79,-34,92,-35,-70,92,92,92,92,-37,92,92,-71,92,92,92,92,-72,92,]),'div':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,93,-76,-80,-84,-85,-86,-87,-88,-54,-55,93,93,-49,93,-51,-52,-53,-77,93,-73,-74,-36,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-66,-67,-68,-69,-78,-79,-34,93,-35,-70,93,93,93,93,-37,93,93,-71,93,93,93,93,-72,93,]),'modulo':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,94,-76,-80,-84,-85,-86,-87,-88,-54,-55,94,94,-49,94,-51,-52,-53,-77,94,-73,-74,-36,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-66,-67,-68,-69,-78,-79,-34,94,-35,-70,94,94,94,94,-37,94,94,-71,94,94,94,94,-72,94,]),'pow':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,95,-76,-80,-84,-85,-86,-87,-88,-54,-55,95,95,95,95,95,95,95,-77,95,-73,-74,-36,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-78,-79,-34,95,-35,-70,95,95,95,95,-37,95,95,-71,95,95,95,95,-72,95,]),'dot':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,96,-76,-80,-84,-85,-86,-87,-88,-54,-55,96,96,96,96,96,96,96,-77,96,-73,-74,-36,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,160,-78,-79,-34,96,-35,-70,96,96,96,96,-37,96,96,-71,96,96,96,96,-72,96,]),'double_colon':([46,47,58,59,60,61,62,64,65,80,81,98,99,101,102,103,104,105,106,107,109,110,112,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,150,151,157,161,162,164,165,166,167,170,179,181,182,183,184,187,188,],[-75,97,-76,-80,-84,-85,-86,-87,-88,-54,-55,97,97,-49,-50,-51,-52,-53,-77,97,-73,-74,-36,97,97,-48,97,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-78,-79,-34,97,-35,-70,-41,-43,97,97,-37,97,97,-71,-42,-44,97,97,-72,-45,]),'then':([46,58,59,60,61,62,64,65,80,81,98,101,102,103,104,105,106,109,110,112,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,151,157,161,162,164,166,179,181,182,184,187,188,],[-75,-76,-80,-84,-85,-86,-87,-88,-54,-55,141,-49,-50,-51,-52,-53,-77,-73,-74,-36,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-78,-79,-34,-35,-70,-41,-43,-46,-37,-71,-42,-44,-47,-72,-45,]),'do':([46,58,59,60,61,62,64,65,80,81,99,101,102,103,104,105,106,109,110,112,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,151,157,161,162,164,166,179,181,182,184,187,188,],[-75,-76,-80,-84,-85,-86,-87,-88,-54,-55,142,-49,-50,-51,-52,-53,-77,-73,-74,-36,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-78,-79,-34,-35,-70,-41,-43,-46,-37,-71,-42,-44,-47,-72,-45,]),'else':([46,58,59,60,61,62,64,65,80,81,101,102,103,104,105,106,109,110,112,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,151,157,161,162,164,166,179,181,182,184,187,188,],[-75,-76,-80,-84,-85,-86,-87,-88,-54,-55,-49,-50,-51,-52,-53,-77,-73,-74,-36,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-78,-79,-34,-35,-70,173,-43,-46,-37,-71,-42,-44,-47,-72,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'Class':([0,1,],[2,4,]),'Class_body':([6,9,23,28,29,36,],[11,15,34,37,39,71,]),'Field':([11,15,34,37,39,71,],[20,20,20,20,20,20,]),'Method':([11,15,34,37,39,71,],[21,21,21,21,21,21,]),'Type':([30,115,143,153,155,],[40,152,163,168,169,]),'Expr':([32,48,49,51,52,53,54,55,56,63,76,77,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,111,141,142,144,145,149,158,159,173,174,175,176,180,186,],[47,98,99,101,102,103,104,105,107,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,150,161,162,164,165,167,170,124,181,182,183,184,124,188,]),'Literal':([32,48,49,51,52,53,54,55,56,63,76,77,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,111,141,142,144,145,149,158,159,173,174,175,176,180,186,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'Block':([32,48,49,51,52,53,54,55,56,63,76,77,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,111,141,142,144,145,149,158,159,168,169,173,174,175,176,180,186,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,177,178,59,59,59,59,59,59,]),'Boolean_literal':([32,48,49,51,52,53,54,55,56,63,76,77,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,111,141,142,144,145,149,158,159,173,174,175,176,180,186,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'Formals':([33,],[67,]),'Formal':([33,67,117,],[69,118,154,]),'Block_body':([63,],[111,]),'Args':([78,159,180,],[123,171,185,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> Class','Program',1,'p_Program','myParserExt.py',49),
  ('Program -> Program Class','Program',2,'p_Program','myParserExt.py',50),
  ('Class_body -> <empty>','Class_body',0,'p_Class_body','myParserExt.py',59),
  ('Class_body -> Class_body Field','Class_body',2,'p_Class_body','myParserExt.py',60),
  ('Class_body -> Class_body Method','Class_body',2,'p_Class_body','myParserExt.py',61),
  ('Class -> class type_identifier lbrace Class_body rbrace','Class',5,'p_Class','myParserExt.py',72),
  ('Class -> class type_identifier extends type_identifier lbrace Class_body rbrace','Class',7,'p_Class','myParserExt.py',73),
  ('Class -> class type_identifier lbrace error rbrace','Class',5,'p_Class_error','myParserExt.py',89),
  ('Class -> class type_identifier extends type_identifier lbrace error rbrace','Class',7,'p_Class_error','myParserExt.py',90),
  ('Class -> class lbrace Class_body rbrace','Class',4,'p_Class_error_no_name','myParserExt.py',97),
  ('Class -> class extends type_identifier lbrace Class_body rbrace','Class',6,'p_Class_error_no_name','myParserExt.py',98),
  ('Class -> class object_identifier lbrace error rbrace','Class',5,'p_Class_error_object_id_name','myParserExt.py',107),
  ('Class -> class object_identifier extends type_identifier lbrace Class_body rbrace','Class',7,'p_Class_error_object_id_name','myParserExt.py',108),
  ('Class -> class type_identifier extends object_identifier lbrace Class_body rbrace','Class',7,'p_Class_error_object_id_name_parent','myParserExt.py',117),
  ('Field -> object_identifier colon Type semicolon','Field',4,'p_Field','myParserExt.py',125),
  ('Field -> object_identifier colon Type assign Expr semicolon','Field',6,'p_Field','myParserExt.py',126),
  ('Field -> object_identifier colon Type','Field',3,'p_Field_error_semicolon','myParserExt.py',137),
  ('Field -> object_identifier colon Type assign Expr','Field',5,'p_Field_error_semicolon','myParserExt.py',138),
  ('Field -> object_identifier semicolon','Field',2,'p_Field_error_type','myParserExt.py',152),
  ('Field -> object_identifier assign Expr semicolon','Field',4,'p_Field_error_type','myParserExt.py',153),
  ('Method -> object_identifier lpar Formals rpar colon Type Block','Method',7,'p_Method','myParserExt.py',166),
  ('Method -> object_identifier lpar error rpar colon Type Block','Method',7,'p_Method_error','myParserExt.py',172),
  ('Type -> type_identifier','Type',1,'p_Type','myParserExt.py',180),
  ('Type -> int32','Type',1,'p_Type','myParserExt.py',181),
  ('Type -> bool','Type',1,'p_Type','myParserExt.py',182),
  ('Type -> string','Type',1,'p_Type','myParserExt.py',183),
  ('Type -> unit','Type',1,'p_Type','myParserExt.py',184),
  ('Formals -> <empty>','Formals',0,'p_Formals','myParserExt.py',189),
  ('Formals -> Formal','Formals',1,'p_Formals','myParserExt.py',190),
  ('Formals -> Formals comma Formal','Formals',3,'p_Formals','myParserExt.py',191),
  ('Formals -> Formals Formal','Formals',2,'p_Formals_error_comma','myParserExt.py',206),
  ('Formal -> object_identifier colon Type','Formal',3,'p_Formal','myParserExt.py',214),
  ('Formal -> object_identifier','Formal',1,'p_Formals_error_type','myParserExt.py',220),
  ('Block -> lbrace Block_body rbrace','Block',3,'p_Block','myParserExt.py',228),
  ('Block -> lbrace error rbrace','Block',3,'p_Block_error','myParserExt.py',233),
  ('Block -> lbrace rbrace','Block',2,'p_Block_error_empty','myParserExt.py',242),
  ('Block -> lbrace Block_body semicolon rbrace','Block',4,'p_Block_error_end_semicolon','myParserExt.py',251),
  ('Block_body -> Expr','Block_body',1,'p_Block_body','myParserExt.py',258),
  ('Block_body -> Block_body semicolon Expr','Block_body',3,'p_Block_body','myParserExt.py',259),
  ('Block_body -> Block_body Expr','Block_body',2,'p_Block_body_error_expr_semicolon','myParserExt.py',271),
  ('Expr -> if Expr then Expr','Expr',4,'p_Expr_If_then','myParserExt.py',279),
  ('Expr -> if Expr then Expr else Expr','Expr',6,'p_Expr_If_then','myParserExt.py',280),
  ('Expr -> while Expr do Expr','Expr',4,'p_Expr_while','myParserExt.py',290),
  ('Expr -> let object_identifier colon Type in Expr','Expr',6,'p_Expr_let','myParserExt.py',295),
  ('Expr -> let object_identifier colon Type assign Expr in Expr','Expr',8,'p_Expr_let','myParserExt.py',296),
  ('Expr -> let object_identifier in Expr','Expr',4,'p_Expr_let_error_type','myParserExt.py',307),
  ('Expr -> let object_identifier assign Expr in Expr','Expr',6,'p_Expr_let_error_type','myParserExt.py',308),
  ('Expr -> object_identifier assign Expr','Expr',3,'p_Expr_assign','myParserExt.py',321),
  ('Expr -> minus Expr','Expr',2,'p_Expr_uminus','myParserExt.py',326),
  ('Expr -> not Expr','Expr',2,'p_Expr_UnOp','myParserExt.py',331),
  ('Expr -> isnull Expr','Expr',2,'p_Expr_UnOp','myParserExt.py',332),
  ('Expr -> plusplus Expr','Expr',2,'p_Expr_UnOp','myParserExt.py',333),
  ('Expr -> minusminus Expr','Expr',2,'p_Expr_UnOp','myParserExt.py',334),
  ('Expr -> Expr plusplus','Expr',2,'p_Expr_UnOp_ext','myParserExt.py',339),
  ('Expr -> Expr minusminus','Expr',2,'p_Expr_UnOp_ext','myParserExt.py',340),
  ('Expr -> Expr and Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',346),
  ('Expr -> Expr or Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',347),
  ('Expr -> Expr xor Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',348),
  ('Expr -> Expr equal Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',349),
  ('Expr -> Expr lower Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',350),
  ('Expr -> Expr larger Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',351),
  ('Expr -> Expr lower_equal Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',352),
  ('Expr -> Expr larger_equal Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',353),
  ('Expr -> Expr plus Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',354),
  ('Expr -> Expr minus Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',355),
  ('Expr -> Expr times Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',356),
  ('Expr -> Expr div Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',357),
  ('Expr -> Expr modulo Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',358),
  ('Expr -> Expr pow Expr','Expr',3,'p_Expr_BinOp','myParserExt.py',359),
  ('Expr -> object_identifier lpar Args rpar','Expr',4,'p_Expr_Call','myParserExt.py',365),
  ('Expr -> Expr dot object_identifier lpar Args rpar','Expr',6,'p_Expr_Call','myParserExt.py',366),
  ('Expr -> Expr double_colon type_identifier dot object_identifier lpar Args rpar','Expr',8,'p_Expr_Call','myParserExt.py',367),
  ('Expr -> new type_identifier','Expr',2,'p_Expr_New','myParserExt.py',382),
  ('Expr -> new object_identifier','Expr',2,'p_Expr_New_error_obj_id','myParserExt.py',388),
  ('Expr -> object_identifier','Expr',1,'p_Expr_Object_id','myParserExt.py',396),
  ('Expr -> Literal','Expr',1,'p_Expr_literal','myParserExt.py',401),
  ('Expr -> lpar rpar','Expr',2,'p_Expr_Unit','myParserExt.py',406),
  ('Expr -> lpar Expr rpar','Expr',3,'p_Expr_Par_expr','myParserExt.py',411),
  ('Expr -> lpar error rpar','Expr',3,'p_Expr_Par_expr_error','myParserExt.py',417),
  ('Expr -> Block','Expr',1,'p_Expr_block','myParserExt.py',425),
  ('Args -> <empty>','Args',0,'p_Args','myParserExt.py',430),
  ('Args -> Expr','Args',1,'p_Args','myParserExt.py',431),
  ('Args -> Args comma Expr','Args',3,'p_Args','myParserExt.py',432),
  ('Literal -> integer_literal','Literal',1,'p_Literal','myParserExt.py',445),
  ('Literal -> string_literal','Literal',1,'p_Literal','myParserExt.py',446),
  ('Literal -> Boolean_literal','Literal',1,'p_Literal','myParserExt.py',447),
  ('Boolean_literal -> true','Boolean_literal',1,'p_Boolean_literal','myParserExt.py',455),
  ('Boolean_literal -> false','Boolean_literal',1,'p_Boolean_literal','myParserExt.py',456),
]
